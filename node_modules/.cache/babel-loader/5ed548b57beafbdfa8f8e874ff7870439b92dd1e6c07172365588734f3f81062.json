{"ast":null,"code":"var _jsxFileName = \"/Users/nicholasmendoza/Documents/myCode/music_library/music_library/src/components/AlbumView.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport Spinner from './Spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AlbumView = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [albumData, setAlbumData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchAlbumData = async () => {\n      try {\n        const response = await fetch(`http://localhost:4000/song/${id}`); // Updated endpoint\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const resData = await response.json();\n        setAlbumData(resData.results);\n      } catch (error) {\n        console.error('Error fetching album data:', error);\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchAlbumData();\n  }, [id]);\n  const navButtons = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate(-1),\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), \"|\", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate('/'),\n      children: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n  const renderSongs = () => albumData.filter(entity => entity.kind === 'song').map((song, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: song.trackName\n  }, i, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 13\n  }, this));\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [albumData.length > 0 ? /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: albumData[0].collectionName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 37\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No album data found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 78\n    }, this), navButtons(), renderSongs()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(AlbumView, \"3xSYqh1AcE8LXaO8LN/lZeY6Awo=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = AlbumView;\nexport default AlbumView;\nvar _c;\n$RefreshReg$(_c, \"AlbumView\");","map":{"version":3,"names":["useEffect","useState","useParams","useNavigate","Spinner","jsxDEV","_jsxDEV","AlbumView","_s","id","navigate","albumData","setAlbumData","loading","setLoading","error","setError","fetchAlbumData","response","fetch","ok","Error","status","resData","json","results","console","message","navButtons","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","renderSongs","filter","entity","kind","map","song","i","trackName","length","collectionName","_c","$RefreshReg$"],"sources":["/Users/nicholasmendoza/Documents/myCode/music_library/music_library/src/components/AlbumView.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport Spinner from './Spinner';\n\nconst AlbumView = () => {\n    const { id } = useParams();\n    const navigate = useNavigate();\n    const [albumData, setAlbumData] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        const fetchAlbumData = async () => {\n            try {\n                const response = await fetch(`http://localhost:4000/song/${id}`); // Updated endpoint\n                if (!response.ok) {\n                    throw new Error(`HTTP error! status: ${response.status}`);\n                }\n                const resData = await response.json();\n                setAlbumData(resData.results);\n            } catch (error) {\n                console.error('Error fetching album data:', error);\n                setError(error.message);\n            } finally {\n                setLoading(false);\n            }\n        };\n        fetchAlbumData();\n    }, [id]);\n\n    const navButtons = () => (\n        <div>\n            <button onClick={() => navigate(-1)}>Back</button>\n            |\n            <button onClick={() => navigate('/')}>Home</button>\n        </div>\n    );\n\n    const renderSongs = () => (\n        albumData.filter(entity => entity.kind === 'song').map((song, i) => (\n            <div key={i}>\n                {song.trackName}\n            </div>\n        ))\n    );\n\n    if (loading) {\n        return <Spinner />;\n    }\n\n    if (error) {\n        return <div>Error: {error}</div>;\n    }\n\n    return (\n        <div>\n            {albumData.length > 0 ? <h2>{albumData[0].collectionName}</h2> : <div>No album data found</div>}\n            {navButtons()}\n            {renderSongs()}\n        </div>\n    );\n};\n\nexport default AlbumView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}