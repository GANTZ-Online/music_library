{"ast":null,"code":"var _jsxFileName = \"/Users/nicholasmendoza/Documents/myCode/music_library/music_library/src/components/ArtistView.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useParams, Link, useNavigate } from 'react-router-dom';\nimport Spinner from './Spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ArtistView = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [artistData, setArtistData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    if (!id) {\n      setError('No artist ID provided');\n      setLoading(false);\n      return;\n    }\n    const fetchArtistData = async () => {\n      try {\n        const response = await fetch(`http://localhost:4000/album/${id}`);\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const resData = await response.json();\n        console.log('Fetched artist data:', resData); // Log the fetched data for debugging\n        setArtistData(resData.results);\n      } catch (error) {\n        console.error('Error fetching artist data:', error);\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchArtistData();\n  }, [id]);\n  const navButtons = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate(-1),\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), \"|\", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate('/'),\n      children: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n  const renderAlbums = () => artistData.filter(entity => entity.collectionType === 'Album').map((album, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Link, {\n      to: `/album/${album.collectionId}`,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: album.collectionName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this)\n  }, i, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 13\n  }, this));\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [artistData.length > 0 ? /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: artistData[0].artistName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 38\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No artist data found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 76\n    }, this), navButtons(), renderAlbums()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n_s(ArtistView, \"8TkI/Vow3tFt7Z3zG5GHGXS9xt8=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ArtistView;\nexport default ArtistView;\nvar _c;\n$RefreshReg$(_c, \"ArtistView\");","map":{"version":3,"names":["useEffect","useState","useParams","Link","useNavigate","Spinner","jsxDEV","_jsxDEV","ArtistView","_s","id","navigate","artistData","setArtistData","loading","setLoading","error","setError","fetchArtistData","response","fetch","ok","Error","status","resData","json","console","log","results","message","navButtons","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","renderAlbums","filter","entity","collectionType","map","album","i","to","collectionId","collectionName","length","artistName","_c","$RefreshReg$"],"sources":["/Users/nicholasmendoza/Documents/myCode/music_library/music_library/src/components/ArtistView.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams, Link, useNavigate } from 'react-router-dom';\nimport Spinner from './Spinner';\n\nconst ArtistView = () => {\n    const { id } = useParams();\n    const navigate = useNavigate();\n    const [artistData, setArtistData] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        if (!id) {\n            setError('No artist ID provided');\n            setLoading(false);\n            return;\n        }\n\n        const fetchArtistData = async () => {\n            try {\n                const response = await fetch(`http://localhost:4000/album/${id}`);\n                if (!response.ok) {\n                    throw new Error(`HTTP error! status: ${response.status}`);\n                }\n                const resData = await response.json();\n                console.log('Fetched artist data:', resData); // Log the fetched data for debugging\n                setArtistData(resData.results);\n            } catch (error) {\n                console.error('Error fetching artist data:', error);\n                setError(error.message);\n            } finally {\n                setLoading(false);\n            }\n        };\n        fetchArtistData();\n    }, [id]);\n\n    const navButtons = () => (\n        <div>\n            <button onClick={() => navigate(-1)}>Back</button>\n            |\n            <button onClick={() => navigate('/')}>Home</button>\n        </div>\n    );\n\n    const renderAlbums = () => (\n        artistData.filter(entity => entity.collectionType === 'Album').map((album, i) => (\n            <div key={i}>\n                <Link to={`/album/${album.collectionId}`}>\n                    <p>{album.collectionName}</p>\n                </Link>\n            </div>\n        ))\n    );\n\n    if (loading) {\n        return <Spinner />;\n    }\n\n    if (error) {\n        return <div>Error: {error}</div>;\n    }\n\n    return (\n        <div>\n            {artistData.length > 0 ? <h2>{artistData[0].artistName}</h2> : <div>No artist data found</div>}\n            {navButtons()}\n            {renderAlbums()}\n        </div>\n    );\n};\n\nexport default ArtistView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}